struct Node* deserializeFromFileSorted(const char* filename, unsigned char* key, unsigned char* iv) {
    FILE* file = fopen(filename, "rb");
    if (file == NULL) {
        printf("Error opening file for reading\n");
        return NULL;
    }

    struct Node* head = NULL;
    struct Node* tail = NULL;
    unsigned char ciphertext[256];
    int bytesRead;
    while ((bytesRead = fread(ciphertext, sizeof(unsigned char), sizeof(int), file)) != 0) {
        if (bytesRead != sizeof(int)) {
            printf("Error reading ciphertext from file\n");
            fclose(file);
            return NULL;
        }
        int plaintext;
        decrypt(ciphertext, sizeof(int), key, iv, (unsigned char *)&plaintext);
        struct Node* newNode = createNode(plaintext);
        if (head == NULL) {
            head = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            tail = tail->next;
        }
    }

    if (!feof(file)) {
        printf("Error reading file\n");
        fclose(file);
        return NULL;
    }

    fclose(file);
    return head;
}